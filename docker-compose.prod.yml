version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: dysaeats-postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      PG_DATA: /var/lib/postgresql/data
    networks:
      - dysaeats-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:6-alpine
    container_name: dysaeats-redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - dysaeats-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: devlmer/dysaeats-backend:${TAG:-latest}
    container_name: dysaeats-backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - 3000:3000
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_DATABASE=${DB_DATABASE}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - DASHBOARD_WEB_URL=${DASHBOARD_WEB_URL}
      - DASHBOARD_MOBILE_URL=${DASHBOARD_MOBILE_URL}
    networks:
      - dysaeats-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s

  dashboard-web:
    image: devlmer/dysaeats-dashboard-web:${TAG:-latest}
    container_name: dysaeats-dashboard-web
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - 3001:3000
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_WS_URL=${NEXT_PUBLIC_WS_URL}
    networks:
      - dysaeats-network

  nginx:
    image: nginx:alpine
    container_name: dysaeats-nginx
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/www:/var/www/html
    depends_on:
      - backend
      - dashboard-web
    networks:
      - dysaeats-network

networks:
  dysaeats-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: