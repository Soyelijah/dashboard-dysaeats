name: CD

on:
  push:
    branches: [main]
    tags:
      - 'v*'

jobs:
  build-and-push-docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata for Backend
        id: meta-backend
        uses: docker/metadata-action@v4
        with:
          images: devlmer/dysaeats-backend
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=sha

      - name: Build and push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=registry,ref=devlmer/dysaeats-backend:buildcache
          cache-to: type=registry,ref=devlmer/dysaeats-backend:buildcache,mode=max

      - name: Extract metadata for Dashboard Web
        id: meta-web
        uses: docker/metadata-action@v4
        with:
          images: devlmer/dysaeats-dashboard-web
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=ref,event=branch
            type=sha

      - name: Build and push Dashboard Web
        uses: docker/build-push-action@v4
        with:
          context: ./dashboard-web
          push: true
          tags: ${{ steps.meta-web.outputs.tags }}
          labels: ${{ steps.meta-web.outputs.labels }}
          cache-from: type=registry,ref=devlmer/dysaeats-dashboard-web:buildcache
          cache-to: type=registry,ref=devlmer/dysaeats-dashboard-web:buildcache,mode=max

  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.SSH_KNOWN_HOSTS }}
          
      - name: Deploy using SSH
        run: |
          ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd ~/dysaeats-staging
            git pull
            docker compose pull
            docker compose up -d
          EOF

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build-and-push-docker
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.PROD_SSH_KNOWN_HOSTS }}
          
      - name: Deploy using SSH
        run: |
          ssh ${{ secrets.PROD_SSH_USER }}@${{ secrets.PROD_SSH_HOST }} << 'EOF'
            cd ~/dysaeats-production
            git pull
            export TAG=${GITHUB_REF#refs/tags/}
            echo "TAG=$TAG" > .env.deploy
            docker compose pull
            docker compose up -d
          EOF