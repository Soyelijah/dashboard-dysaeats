/**
 * React Native Bundle (fixed with window/global)
 */

// Define window and global objects
var window = this;
var self = this;
var global = this;
global.window = window;
global.self = self;

// BatchedBridge setup
global.BatchedBridge = {
  registerCallableModule: function(name, module) {
    console.log('Registered module: ' + name);
    return true;
  },
  registerLazyCallableModule: function(name, factory) {
    console.log('Registered lazy module: ' + name);
    return true;
  },
  getCallableModule: function(name) {
    return {
      runApplication: function(appKey, appParameters) {
        console.log('Running app: ' + appKey);
      }
    };
  },
  flushedQueue: function() {
    return [];
  }
};

// Other React Native globals
global.__DEV__ = false;
global.__fbBatchedBridgeConfig = {
  remoteModuleConfig: [],
  localModulesConfig: []
};

// Console polyfill
if (\!global.console) {
  global.console = {
    log: function() {},
    warn: function() {},
    error: function() {},
    info: function() {}
  };
}

// Basic React
var React = {
  createElement: function(type, props, children) {
    return { type: type, props: props, children: children };
  },
  Component: function() {}
};
global.React = React;

// Basic React Native
var ReactNative = {
  AppRegistry: {
    registerComponent: function(name, getComponentFunc) {
      console.log('Registered app: ' + name);
      BatchedBridge.registerCallableModule('AppRegistry', {
        runApplication: function(appKey, params) {
          console.log('Running ' + appKey);
        }
      });
      return true;
    }
  },
  StyleSheet: {
    create: function(styles) { return styles; }
  },
  Text: 'Text',
  View: 'View',
  SafeAreaView: 'SafeAreaView'
};
global.ReactNative = ReactNative;

// App component 
var DysaEatsApp = function() {
  return React.createElement(
    ReactNative.SafeAreaView,
    { style: { flex: 1, backgroundColor: '#F3F3F3' } },
    React.createElement(
      ReactNative.View,
      { style: { flex: 1, justifyContent: 'center', alignItems: 'center' } },
      React.createElement(
        ReactNative.Text,
        { style: { fontSize: 32, fontWeight: 'bold', color: '#FF6347' } },
        'DysaEats'
      ),
      React.createElement(
        ReactNative.Text,
        { style: { fontSize: 18, color: '#555' } },
        'Plataforma de entrega de comida'
      )
    )
  );
};

// Register app
ReactNative.AppRegistry.registerComponent('ReactMobileAppNew', function() { 
  return DysaEatsApp; 
});

// Module system
global.__r = function(id) {
  return console.log('Required module: ' + id);
};

global.__d = function(factory, moduleId, dependencyMap) {
  return console.log('Defined module: ' + moduleId);
};

// Call "main" module
__r('ReactMobileAppNew');
